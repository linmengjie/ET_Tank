syntax = "proto3";
package ETModel;

message Actor_Test // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	string Info = 1;
}

message C2M_TestRequest // IActorLocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;

	string request = 1;
}

message M2C_TestResponse // IActorLocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	string response = 1;
}

message Actor_TransferRequest // IActorLocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;

	int32 MapIndex = 1;
}

message Actor_TransferResponse // IActorLocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

}

message C2G_EnterMap // IRequest
{
	int32 RpcId = 90;
}

message G2C_EnterMap // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	// 自己的unit id
	int64 UnitId = 1;
	// 所有的unit
	repeated UnitInfo Units = 2;
}

message C2G_EnterBattle // IRequest
{
	int32 RpcId = 90;
}

message G2C_EnterBattle // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	// 自己的Tank id
	int64 TankId = 1;
	// 所有的Tank
	repeated TankInfo Tanks = 2;
}

message UnitInfo
{
	int64 UnitId  = 1;

	float X = 2;
	float Y = 3;
	float Z = 4;
}

enum TankCamp
{
	None = 0;
	Blue = 1;
	Red = 2;
}

message TankInfo
{


	int64 TankId = 1;

	// 位置
	int32 PX = 2;
	int32 PY = 3;
	int32 PZ = 4;

	// 朝向
	int32 RX = 5;
	int32 RY = 6;
	int32 RZ = 7;

	int32 TurretRY = 8;
	int32 GunRX = 9;

	TankCamp TankCamp = 10;
}

message M2C_CreateUnits // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	// 所有的unit
    repeated UnitInfo Units = 1;
}

message B2C_CreateTanks // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	// 所有的unit
    repeated TankInfo Tanks = 1;
}

message Frame_ClickMap // IActorLocationMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 Id = 94;
	
	
	float X = 1;
	float Y = 2;
	float Z = 3;
}

message C2B_TankInfo // IActorLocationMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;

	TankInfo TankInfo = 1;
}

message B2C_TankInfos // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;

	repeated TankInfo TankInfos = 1;
}

message M2C_PathfindingResult // IActorMessage
{
	int64 ActorId = 93;
	
	int64 Id = 1;

	float X = 2;
	float Y = 3;
	float Z = 4;
	
	repeated float Xs = 5;
	repeated float Ys = 6;
	repeated float Zs = 7;
}


message C2R_Ping // IRequest
{
	int32 RpcId = 90;
}

message R2C_Ping // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message G2C_Test // IMessage
{
}

message C2M_Reload // IRequest
{
	int32 RpcId = 90;
	string Account = 1;

	string Password = 2;
}

message M2C_Reload // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message C2B_Shoot // IActorLocationMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;

	int32 PX = 1;
	int32 PY = 2;
	int32 PZ = 3;

	int32 RX = 4;
	int32 RY = 5;
	int32 RZ = 6;
}

message B2C_Shoot // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;

	int64 TankId = 1;

	int32 PX = 2;
	int32 PY = 3;
	int32 PZ = 4;

	int32 RX = 5;
	int32 RY = 6;
	int32 RZ = 7;
}

message C2B_AttackTank // IActorLocationMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;

	// 目标坦克id
	int64 TargetTankId = 1;

	// 攻击力
	int32 Damage = 2;
}

message B2C_AttackTank // IActorMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;

	// 攻击者
	int64 SourceTankId = 1;

	// 目标坦克id
	int64 TargetTankId = 2;

	// 攻击力
	int32 Damage = 3;
}